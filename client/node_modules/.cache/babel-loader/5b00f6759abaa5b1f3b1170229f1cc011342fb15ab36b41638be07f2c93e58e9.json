{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Desktop\\\\autom\\\\client\\\\src\\\\components\\\\assessment\\\\NumeracyAssessment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMERACY_CATEGORIES = {\n  NUMBER_RECOGNITION: {\n    name: 'Number Recognition',\n    levels: [{\n      name: 'Basic Numbers',\n      description: 'Identify numbers 1-20'\n    }, {\n      name: 'Advanced Numbers',\n      description: 'Identify numbers 21-100'\n    }, {\n      name: 'Number Words',\n      description: 'Read numbers in word form'\n    }]\n  },\n  BASIC_OPERATIONS: {\n    name: 'Basic Operations',\n    levels: [{\n      name: 'Addition',\n      description: 'Single and double digit addition'\n    }, {\n      name: 'Subtraction',\n      description: 'Single and double digit subtraction'\n    }, {\n      name: 'Multiplication',\n      description: 'Basic multiplication tables'\n    }, {\n      name: 'Division',\n      description: 'Simple division problems'\n    }]\n  },\n  PATTERNS: {\n    name: 'Number Patterns',\n    levels: [{\n      name: 'Skip Counting',\n      description: 'Count by 2s, 5s, and 10s'\n    }, {\n      name: 'Number Sequences',\n      description: 'Complete number sequences'\n    }, {\n      name: 'Odd and Even',\n      description: 'Identify odd and even numbers'\n    }]\n  },\n  PLACE_VALUE: {\n    name: 'Place Value',\n    levels: [{\n      name: 'Ones and Tens',\n      description: 'Understand ones and tens place'\n    }, {\n      name: 'Hundreds',\n      description: 'Understand hundreds place'\n    }, {\n      name: 'Comparing Numbers',\n      description: 'Compare numbers using >, <, ='\n    }]\n  },\n  MONEY: {\n    name: 'Money Skills',\n    levels: [{\n      name: 'Coin Recognition',\n      description: 'Identify coins and their values'\n    }, {\n      name: 'Counting Money',\n      description: 'Count and add money amounts'\n    }, {\n      name: 'Making Change',\n      description: 'Calculate change from purchases'\n    }]\n  },\n  TIME: {\n    name: 'Time and Measurement',\n    levels: [{\n      name: 'Clock Reading',\n      description: 'Read analog and digital clocks'\n    }, {\n      name: 'Calendar',\n      description: 'Understand calendar concepts'\n    }, {\n      name: 'Basic Measurement',\n      description: 'Measure length, weight, and capacity'\n    }]\n  },\n  FRACTIONS: {\n    name: 'Fractions',\n    levels: [{\n      name: 'Basic Fractions',\n      description: 'Identify and compare fractions'\n    }, {\n      name: 'Fraction Operations',\n      description: 'Add and subtract simple fractions'\n    }, {\n      name: 'Fraction Problems',\n      description: 'Solve fraction word problems'\n    }]\n  },\n  GEOMETRY: {\n    name: 'Geometry',\n    levels: [{\n      name: 'Shapes',\n      description: 'Identify basic geometric shapes'\n    }, {\n      name: 'Properties',\n      description: 'Understand shape properties'\n    }, {\n      name: 'Area and Perimeter',\n      description: 'Calculate area and perimeter'\n    }]\n  },\n  DATA: {\n    name: 'Data Handling',\n    levels: [{\n      name: 'Graphs',\n      description: 'Read and interpret simple graphs'\n    }, {\n      name: 'Statistics',\n      description: 'Calculate mean, median, and mode'\n    }, {\n      name: 'Probability',\n      description: 'Understand basic probability'\n    }]\n  },\n  PROBLEM_SOLVING: {\n    name: 'Problem Solving',\n    levels: [{\n      name: 'Word Problems',\n      description: 'Solve mathematical word problems'\n    }, {\n      name: 'Logical Reasoning',\n      description: 'Solve logical reasoning problems'\n    }, {\n      name: 'Pattern Recognition',\n      description: 'Identify and extend patterns'\n    }]\n  }\n};\nconst NumeracyAssessment = () => {\n  _s();\n  const {\n    studentId,\n    classId\n  } = useParams();\n  const navigate = useNavigate();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [score, setScore] = useState(0);\n  const [progress, setProgress] = useState({});\n  const [error, setError] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const generateQuestion = (category, level) => {\n    // This is a placeholder - you would implement specific question generation logic\n    // for each category and level\n    switch (category) {\n      case 'NUMBER_RECOGNITION':\n        return generateNumberRecognitionQuestion(level);\n      case 'BASIC_OPERATIONS':\n        return generateBasicOperationsQuestion(level);\n      // Add cases for other categories\n      default:\n        return {\n          question: 'Sample question',\n          answer: 'Sample answer'\n        };\n    }\n  };\n  const generateNumberRecognitionQuestion = level => {\n    switch (level) {\n      case 1:\n        const num = Math.floor(Math.random() * 20) + 1;\n        return {\n          question: `What number is this? ${num}`,\n          answer: num.toString()\n        };\n      case 2:\n        const num2 = Math.floor(Math.random() * 80) + 21;\n        return {\n          question: `What number is this? ${num2}`,\n          answer: num2.toString()\n        };\n      case 3:\n        const numbers = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\n        const word = numbers[Math.floor(Math.random() * numbers.length)];\n        return {\n          question: `Write this number: ${word}`,\n          answer: (numbers.indexOf(word) + 1).toString()\n        };\n      default:\n        return {\n          question: 'Invalid level',\n          answer: ''\n        };\n    }\n  };\n  const generateBasicOperationsQuestion = level => {\n    switch (level) {\n      case 1:\n        // Addition\n        const num1 = Math.floor(Math.random() * 10) + 1;\n        const num2 = Math.floor(Math.random() * 10) + 1;\n        return {\n          question: `What is ${num1} + ${num2}?`,\n          answer: (num1 + num2).toString()\n        };\n      case 2:\n        // Subtraction\n        const num3 = Math.floor(Math.random() * 10) + 1;\n        const num4 = Math.floor(Math.random() * num3) + 1;\n        return {\n          question: `What is ${num3} - ${num4}?`,\n          answer: (num3 - num4).toString()\n        };\n      case 3:\n        // Multiplication\n        const num5 = Math.floor(Math.random() * 10) + 1;\n        const num6 = Math.floor(Math.random() * 10) + 1;\n        return {\n          question: `What is ${num5} ร ${num6}?`,\n          answer: (num5 * num6).toString()\n        };\n      case 4:\n        // Division\n        const num7 = Math.floor(Math.random() * 10) + 1;\n        const num8 = Math.floor(Math.random() * 10) + 1;\n        const product = num7 * num8;\n        return {\n          question: `What is ${product} รท ${num7}?`,\n          answer: num8.toString()\n        };\n      default:\n        return {\n          question: 'Invalid level',\n          answer: ''\n        };\n    }\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setCurrentLevel(1);\n    const newQuestion = generateQuestion(category, 1);\n    setQuestion(newQuestion.question);\n    setAnswer(newQuestion.answer);\n  };\n  const handleAnswerSubmit = userAnswer => {\n    const isAnswerCorrect = userAnswer.trim() === answer.trim();\n    setIsCorrect(isAnswerCorrect);\n    if (isAnswerCorrect) {\n      setScore(prev => prev + 1);\n      // Move to next level or category\n      if (currentLevel < NUMERACY_CATEGORIES[selectedCategory].levels.length) {\n        setCurrentLevel(prev => prev + 1);\n        const newQuestion = generateQuestion(selectedCategory, currentLevel + 1);\n        setQuestion(newQuestion.question);\n        setAnswer(newQuestion.answer);\n      } else {\n        // Category completed\n        setProgress(prev => ({\n          ...prev,\n          [selectedCategory]: {\n            completed: true,\n            accuracy: (score + 1) / NUMERACY_CATEGORIES[selectedCategory].levels.length * 100\n          }\n        }));\n      }\n    }\n  };\n  const handleSave = async () => {\n    try {\n      setIsSaving(true);\n      setError('');\n      const assessmentData = {\n        type: 'numeracy',\n        category: selectedCategory,\n        level: currentLevel,\n        score,\n        progress,\n        date: new Date().toISOString()\n      };\n      await axios.post(`/api/classes/${classId}/students/${studentId}/assessments`, assessmentData, {\n        withCredentials: true\n      });\n      navigate(`/class/${classId}/student/${studentId}/report`);\n    } catch (err) {\n      setError('Failed to save assessment. Please try again.');\n      console.error('Error saving assessment:', err);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Numeracy Assessment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), !selectedCategory ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: Object.entries(NUMERACY_CATEGORIES).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCategorySelect(key),\n        className: \"bg-white rounded-lg shadow-md p-6 cursor-pointer hover:shadow-lg transition-shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: category.levels[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold\",\n            children: [NUMERACY_CATEGORIES[selectedCategory].name, \" - Level \", currentLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: NUMERACY_CATEGORIES[selectedCategory].levels[currentLevel - 1].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg mb-4\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: answer,\n            onChange: e => setAnswer(e.target.value),\n            className: \"w-full p-2 border rounded-md\",\n            placeholder: \"Enter your answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerSubmit(answer),\n            className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\",\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: isSaving,\n            className: \"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50\",\n            children: isSaving ? 'Saving...' : 'Save Assessment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), isCorrect !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 p-4 rounded-md ${isCorrect ? 'bg-green-100' : 'bg-red-100'}`,\n          children: isCorrect ? 'Correct!' : 'Incorrect. Try again!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 bg-red-100 text-red-700 rounded-md\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(NumeracyAssessment, \"xgn/wa0fIU9U3jui6YnJG8WtMaA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NumeracyAssessment;\nexport default NumeracyAssessment;\nvar _c;\n$RefreshReg$(_c, \"NumeracyAssessment\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","NUMERACY_CATEGORIES","NUMBER_RECOGNITION","name","levels","description","BASIC_OPERATIONS","PATTERNS","PLACE_VALUE","MONEY","TIME","FRACTIONS","GEOMETRY","DATA","PROBLEM_SOLVING","NumeracyAssessment","_s","studentId","classId","navigate","selectedCategory","setSelectedCategory","currentLevel","setCurrentLevel","question","setQuestion","answer","setAnswer","isCorrect","setIsCorrect","score","setScore","progress","setProgress","error","setError","isSaving","setIsSaving","generateQuestion","category","level","generateNumberRecognitionQuestion","generateBasicOperationsQuestion","num","Math","floor","random","toString","num2","numbers","word","length","indexOf","num1","num3","num4","num5","num6","num7","num8","product","handleCategorySelect","newQuestion","handleAnswerSubmit","userAnswer","isAnswerCorrect","trim","prev","completed","accuracy","handleSave","assessmentData","type","date","Date","toISOString","post","withCredentials","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","key","value","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Desktop/autom/client/src/components/assessment/NumeracyAssessment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst NUMERACY_CATEGORIES = {\r\n  NUMBER_RECOGNITION: {\r\n    name: 'Number Recognition',\r\n    levels: [\r\n      { name: 'Basic Numbers', description: 'Identify numbers 1-20' },\r\n      { name: 'Advanced Numbers', description: 'Identify numbers 21-100' },\r\n      { name: 'Number Words', description: 'Read numbers in word form' }\r\n    ]\r\n  },\r\n  BASIC_OPERATIONS: {\r\n    name: 'Basic Operations',\r\n    levels: [\r\n      { name: 'Addition', description: 'Single and double digit addition' },\r\n      { name: 'Subtraction', description: 'Single and double digit subtraction' },\r\n      { name: 'Multiplication', description: 'Basic multiplication tables' },\r\n      { name: 'Division', description: 'Simple division problems' }\r\n    ]\r\n  },\r\n  PATTERNS: {\r\n    name: 'Number Patterns',\r\n    levels: [\r\n      { name: 'Skip Counting', description: 'Count by 2s, 5s, and 10s' },\r\n      { name: 'Number Sequences', description: 'Complete number sequences' },\r\n      { name: 'Odd and Even', description: 'Identify odd and even numbers' }\r\n    ]\r\n  },\r\n  PLACE_VALUE: {\r\n    name: 'Place Value',\r\n    levels: [\r\n      { name: 'Ones and Tens', description: 'Understand ones and tens place' },\r\n      { name: 'Hundreds', description: 'Understand hundreds place' },\r\n      { name: 'Comparing Numbers', description: 'Compare numbers using >, <, =' }\r\n    ]\r\n  },\r\n  MONEY: {\r\n    name: 'Money Skills',\r\n    levels: [\r\n      { name: 'Coin Recognition', description: 'Identify coins and their values' },\r\n      { name: 'Counting Money', description: 'Count and add money amounts' },\r\n      { name: 'Making Change', description: 'Calculate change from purchases' }\r\n    ]\r\n  },\r\n  TIME: {\r\n    name: 'Time and Measurement',\r\n    levels: [\r\n      { name: 'Clock Reading', description: 'Read analog and digital clocks' },\r\n      { name: 'Calendar', description: 'Understand calendar concepts' },\r\n      { name: 'Basic Measurement', description: 'Measure length, weight, and capacity' }\r\n    ]\r\n  },\r\n  FRACTIONS: {\r\n    name: 'Fractions',\r\n    levels: [\r\n      { name: 'Basic Fractions', description: 'Identify and compare fractions' },\r\n      { name: 'Fraction Operations', description: 'Add and subtract simple fractions' },\r\n      { name: 'Fraction Problems', description: 'Solve fraction word problems' }\r\n    ]\r\n  },\r\n  GEOMETRY: {\r\n    name: 'Geometry',\r\n    levels: [\r\n      { name: 'Shapes', description: 'Identify basic geometric shapes' },\r\n      { name: 'Properties', description: 'Understand shape properties' },\r\n      { name: 'Area and Perimeter', description: 'Calculate area and perimeter' }\r\n    ]\r\n  },\r\n  DATA: {\r\n    name: 'Data Handling',\r\n    levels: [\r\n      { name: 'Graphs', description: 'Read and interpret simple graphs' },\r\n      { name: 'Statistics', description: 'Calculate mean, median, and mode' },\r\n      { name: 'Probability', description: 'Understand basic probability' }\r\n    ]\r\n  },\r\n  PROBLEM_SOLVING: {\r\n    name: 'Problem Solving',\r\n    levels: [\r\n      { name: 'Word Problems', description: 'Solve mathematical word problems' },\r\n      { name: 'Logical Reasoning', description: 'Solve logical reasoning problems' },\r\n      { name: 'Pattern Recognition', description: 'Identify and extend patterns' }\r\n    ]\r\n  }\r\n};\r\n\r\nconst NumeracyAssessment = () => {\r\n  const { studentId, classId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [currentLevel, setCurrentLevel] = useState(1);\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [progress, setProgress] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const generateQuestion = (category, level) => {\r\n    // This is a placeholder - you would implement specific question generation logic\r\n    // for each category and level\r\n    switch (category) {\r\n      case 'NUMBER_RECOGNITION':\r\n        return generateNumberRecognitionQuestion(level);\r\n      case 'BASIC_OPERATIONS':\r\n        return generateBasicOperationsQuestion(level);\r\n      // Add cases for other categories\r\n      default:\r\n        return { question: 'Sample question', answer: 'Sample answer' };\r\n    }\r\n  };\r\n\r\n  const generateNumberRecognitionQuestion = (level) => {\r\n    switch (level) {\r\n      case 1:\r\n        const num = Math.floor(Math.random() * 20) + 1;\r\n        return { question: `What number is this? ${num}`, answer: num.toString() };\r\n      case 2:\r\n        const num2 = Math.floor(Math.random() * 80) + 21;\r\n        return { question: `What number is this? ${num2}`, answer: num2.toString() };\r\n      case 3:\r\n        const numbers = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\r\n        const word = numbers[Math.floor(Math.random() * numbers.length)];\r\n        return { question: `Write this number: ${word}`, answer: (numbers.indexOf(word) + 1).toString() };\r\n      default:\r\n        return { question: 'Invalid level', answer: '' };\r\n    }\r\n  };\r\n\r\n  const generateBasicOperationsQuestion = (level) => {\r\n    switch (level) {\r\n      case 1: // Addition\r\n        const num1 = Math.floor(Math.random() * 10) + 1;\r\n        const num2 = Math.floor(Math.random() * 10) + 1;\r\n        return { question: `What is ${num1} + ${num2}?`, answer: (num1 + num2).toString() };\r\n      case 2: // Subtraction\r\n        const num3 = Math.floor(Math.random() * 10) + 1;\r\n        const num4 = Math.floor(Math.random() * num3) + 1;\r\n        return { question: `What is ${num3} - ${num4}?`, answer: (num3 - num4).toString() };\r\n      case 3: // Multiplication\r\n        const num5 = Math.floor(Math.random() * 10) + 1;\r\n        const num6 = Math.floor(Math.random() * 10) + 1;\r\n        return { question: `What is ${num5} ร ${num6}?`, answer: (num5 * num6).toString() };\r\n      case 4: // Division\r\n        const num7 = Math.floor(Math.random() * 10) + 1;\r\n        const num8 = Math.floor(Math.random() * 10) + 1;\r\n        const product = num7 * num8;\r\n        return { question: `What is ${product} รท ${num7}?`, answer: num8.toString() };\r\n      default:\r\n        return { question: 'Invalid level', answer: '' };\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    setCurrentLevel(1);\r\n    const newQuestion = generateQuestion(category, 1);\r\n    setQuestion(newQuestion.question);\r\n    setAnswer(newQuestion.answer);\r\n  };\r\n\r\n  const handleAnswerSubmit = (userAnswer) => {\r\n    const isAnswerCorrect = userAnswer.trim() === answer.trim();\r\n    setIsCorrect(isAnswerCorrect);\r\n    \r\n    if (isAnswerCorrect) {\r\n      setScore(prev => prev + 1);\r\n      // Move to next level or category\r\n      if (currentLevel < NUMERACY_CATEGORIES[selectedCategory].levels.length) {\r\n        setCurrentLevel(prev => prev + 1);\r\n        const newQuestion = generateQuestion(selectedCategory, currentLevel + 1);\r\n        setQuestion(newQuestion.question);\r\n        setAnswer(newQuestion.answer);\r\n      } else {\r\n        // Category completed\r\n        setProgress(prev => ({\r\n          ...prev,\r\n          [selectedCategory]: {\r\n            completed: true,\r\n            accuracy: (score + 1) / NUMERACY_CATEGORIES[selectedCategory].levels.length * 100\r\n          }\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setIsSaving(true);\r\n      setError('');\r\n\r\n      const assessmentData = {\r\n        type: 'numeracy',\r\n        category: selectedCategory,\r\n        level: currentLevel,\r\n        score,\r\n        progress,\r\n        date: new Date().toISOString()\r\n      };\r\n\r\n      await axios.post(\r\n        `/api/classes/${classId}/students/${studentId}/assessments`,\r\n        assessmentData,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      navigate(`/class/${classId}/student/${studentId}/report`);\r\n    } catch (err) {\r\n      setError('Failed to save assessment. Please try again.');\r\n      console.error('Error saving assessment:', err);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h1 className=\"text-2xl font-bold\">Numeracy Assessment</h1>\r\n        <button\r\n          onClick={() => navigate(-1)}\r\n          className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      {!selectedCategory ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {Object.entries(NUMERACY_CATEGORIES).map(([key, category]) => (\r\n            <div\r\n              key={key}\r\n              onClick={() => handleCategorySelect(key)}\r\n              className=\"bg-white rounded-lg shadow-md p-6 cursor-pointer hover:shadow-lg transition-shadow\"\r\n            >\r\n              <h2 className=\"text-xl font-semibold mb-2\">{category.name}</h2>\r\n              <p className=\"text-gray-600\">{category.levels[0].description}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <div className=\"mb-4\">\r\n              <h2 className=\"text-xl font-semibold\">\r\n                {NUMERACY_CATEGORIES[selectedCategory].name} - Level {currentLevel}\r\n              </h2>\r\n              <p className=\"text-gray-600\">\r\n                {NUMERACY_CATEGORIES[selectedCategory].levels[currentLevel - 1].description}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <p className=\"text-lg mb-4\">{question}</p>\r\n              <input\r\n                type=\"text\"\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                className=\"w-full p-2 border rounded-md\"\r\n                placeholder=\"Enter your answer\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center\">\r\n              <button\r\n                onClick={() => handleAnswerSubmit(answer)}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n              >\r\n                Submit Answer\r\n              </button>\r\n              <button\r\n                onClick={handleSave}\r\n                disabled={isSaving}\r\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50\"\r\n              >\r\n                {isSaving ? 'Saving...' : 'Save Assessment'}\r\n              </button>\r\n            </div>\r\n\r\n            {isCorrect !== null && (\r\n              <div className={`mt-4 p-4 rounded-md ${isCorrect ? 'bg-green-100' : 'bg-red-100'}`}>\r\n                {isCorrect ? 'Correct!' : 'Incorrect. Try again!'}\r\n              </div>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"mt-4 p-4 bg-red-100 text-red-700 rounded-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumeracyAssessment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}