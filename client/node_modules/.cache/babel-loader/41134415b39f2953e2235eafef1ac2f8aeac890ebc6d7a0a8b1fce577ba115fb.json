{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Desktop\\\\autom\\\\client\\\\src\\\\components\\\\assessment\\\\StudentAssessment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Webcam from 'react-webcam';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StudentAssessment = () => {\n  _s();\n  const {\n    classId,\n    studentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [student, setStudent] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [ocrResult, setOcrResult] = useState('');\n  const [expectedAnswer, setExpectedAnswer] = useState('');\n  const [accuracy, setAccuracy] = useState(0);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [assessmentType, setAssessmentType] = useState('speech'); // 'speech' or 'ocr'\n  const [showAccuracy, setShowAccuracy] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        const res = await axios.get(`/api/students/${studentId}`, {\n          withCredentials: true\n        });\n        setStudent(res.data);\n      } catch (err) {\n        var _err$response;\n        console.error(err);\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n          navigate('/login');\n        } else {\n          setError('Failed to load student data');\n        }\n      }\n    };\n    fetchStudentData();\n  }, [studentId, navigate]);\n\n  // Speech Recognition Setup\n  const startSpeechRecognition = () => {\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognitionRef.current = recognition;\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.onresult = event => {\n        const current = event.resultIndex;\n        const transcript = event.results[current][0].transcript;\n        setTranscript(transcript);\n      };\n      recognition.onerror = event => {\n        setError('Speech recognition error: ' + event.error);\n      };\n      recognition.start();\n      setIsRecording(true);\n    } else {\n      setError('Speech recognition is not supported in your browser');\n    }\n  };\n  const stopSpeechRecognition = () => {\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  // OCR Functionality\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setIsProcessing(true);\n    setError('');\n    try {\n      const result = await Tesseract.recognize(file, 'eng', {\n        logger: m => console.log(m)\n      });\n      setOcrResult(result.data.text);\n    } catch (err) {\n      setError('OCR processing failed: ' + err.message);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Simple string comparison for accuracy\n  const calculateAccuracy = (str1, str2) => {\n    if (!str1 || !str2) return 0;\n\n    // Convert to lowercase and remove spaces\n    const s1 = str1.toLowerCase().replace(/\\s+/g, '');\n    const s2 = str2.toLowerCase().replace(/\\s+/g, '');\n\n    // Count matching characters\n    let matches = 0;\n    const minLength = Math.min(s1.length, s2.length);\n    for (let i = 0; i < minLength; i++) {\n      if (s1[i] === s2[i]) matches++;\n    }\n\n    // Calculate percentage\n    return matches / Math.max(s1.length, s2.length) * 100;\n  };\n\n  // Evaluate Assessment\n  const handleEvaluate = () => {\n    // Get the student's response based on assessment type\n    const studentResponse = assessmentType === 'speech' ? transcript : ocrResult;\n\n    // Basic validation\n    if (!expectedAnswer) {\n      setError('Please enter the expected answer');\n      return;\n    }\n    if (!studentResponse) {\n      setError(`Please provide ${assessmentType === 'speech' ? 'speech' : 'OCR'} input`);\n      return;\n    }\n\n    // Calculate and set accuracy\n    const newAccuracy = calculateAccuracy(studentResponse, expectedAnswer);\n    setAccuracy(newAccuracy);\n    setError(''); // Clear any errors\n  };\n\n  // Save Assessment\n  const handleSave = async () => {\n    if (!expectedAnswer) {\n      setError('Please provide the expected answer');\n      return;\n    }\n    if (accuracy === 0) {\n      setError('Please evaluate the assessment before saving');\n      return;\n    }\n    try {\n      const assessmentData = {\n        type: assessmentType,\n        expectedAnswer,\n        accuracy,\n        date: new Date()\n      };\n      if (assessmentType === 'speech') {\n        assessmentData.transcript = transcript;\n      } else {\n        assessmentData.ocrResult = ocrResult;\n      }\n      await axios.post(`/api/classes/${classId}/students/${studentId}/assessment`, assessmentData, {\n        withCredentials: true\n      });\n      alert('Assessment saved successfully!');\n      navigate(`/class/${classId}`);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to save assessment: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || err.message));\n    }\n  };\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = {\n    labels: student.assessments.map(a => new Date(a.date).toLocaleDateString()),\n    datasets: [{\n      label: 'Assessment Accuracy',\n      data: student.assessments.map(a => a.accuracy),\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          children: \"Student Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/class/${classId}`),\n          className: \"px-4 py-2 text-gray-600 hover:text-gray-800\",\n          children: \"\\u2190 Back to Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Assessment Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"speech\",\n              checked: assessmentType === 'speech',\n              onChange: e => setAssessmentType(e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), \"Speech to Text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"ocr\",\n              checked: assessmentType === 'ocr',\n              onChange: e => setAssessmentType(e.target.value),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), \"OCR (Image to Text)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Expected Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: expectedAnswer,\n          onChange: e => setExpectedAnswer(e.target.value),\n          placeholder: \"Enter the expected answer...\",\n          className: \"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 min-h-[100px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bg-white rounded-lg shadow-md p-6 ${assessmentType === 'ocr' ? 'opacity-50' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Speech to Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: isRecording ? stopSpeechRecognition : startSpeechRecognition,\n                disabled: assessmentType === 'ocr',\n                className: `px-4 py-2 rounded-md ${isRecording ? 'bg-red-600 hover:bg-red-700' : 'bg-indigo-600 hover:bg-indigo-700'} text-white ${assessmentType === 'ocr' ? 'opacity-50 cursor-not-allowed' : ''}`,\n                children: isRecording ? 'Stop Recording' : 'Start Recording'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border rounded-md p-4 min-h-[200px]\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: transcript || 'Speech transcript will appear here...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bg-white rounded-lg shadow-md p-6 ${assessmentType === 'speech' ? 'opacity-50' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"OCR (Image to Text)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Upload Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageUpload,\n                disabled: assessmentType === 'speech',\n                className: `block w-full text-sm text-gray-500\n                    file:mr-4 file:py-2 file:px-4\n                    file:rounded-md file:border-0\n                    file:text-sm file:font-semibold\n                    file:bg-indigo-50 file:text-indigo-700\n                    hover:file:bg-indigo-100 ${assessmentType === 'speech' ? 'opacity-50 cursor-not-allowed' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-4\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: \"Processing image...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border rounded-md p-4 min-h-[200px]\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: ocrResult || 'OCR result will appear here...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEvaluate,\n          className: \"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500\",\n          children: \"Evaluate Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), accuracy > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-indigo-600 h-4 rounded-full\",\n              style: {\n                width: `${accuracy}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-4 text-lg font-semibold\",\n            children: [accuracy.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          className: \"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\",\n          children: \"Save Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentAssessment, \"avEFVvFxFEvLZAT9jtetwBoYPCQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StudentAssessment;\nexport default StudentAssessment;\nvar _c;\n$RefreshReg$(_c, \"StudentAssessment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","axios","Webcam","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Tesseract","jsxDEV","_jsxDEV","register","StudentAssessment","_s","classId","studentId","navigate","student","setStudent","isRecording","setIsRecording","transcript","setTranscript","ocrResult","setOcrResult","expectedAnswer","setExpectedAnswer","accuracy","setAccuracy","isProcessing","setIsProcessing","error","setError","assessmentType","setAssessmentType","showAccuracy","setShowAccuracy","recognitionRef","fetchStudentData","res","get","withCredentials","data","err","_err$response","console","response","status","startSpeechRecognition","window","recognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","resultIndex","results","onerror","start","stopSpeechRecognition","stop","handleImageUpload","file","target","files","result","recognize","logger","m","log","text","message","calculateAccuracy","str1","str2","s1","toLowerCase","replace","s2","matches","minLength","Math","min","length","i","max","handleEvaluate","studentResponse","newAccuracy","handleSave","assessmentData","type","date","Date","post","alert","_err$response2","_err$response2$data","msg","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","assessments","map","a","toLocaleDateString","datasets","label","borderColor","tension","className","onClick","value","checked","onChange","e","placeholder","disabled","accept","style","width","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Desktop/autom/client/src/components/assessment/StudentAssessment.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Webcam from 'react-webcam';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport Tesseract from 'tesseract.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst StudentAssessment = () => {\r\n  const { classId, studentId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [student, setStudent] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [ocrResult, setOcrResult] = useState('');\r\n  const [expectedAnswer, setExpectedAnswer] = useState('');\r\n  const [accuracy, setAccuracy] = useState(0);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [assessmentType, setAssessmentType] = useState('speech'); // 'speech' or 'ocr'\r\n  const [showAccuracy, setShowAccuracy] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStudentData = async () => {\r\n      try {\r\n        const res = await axios.get(`/api/students/${studentId}`, { withCredentials: true });\r\n        setStudent(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        if (err.response?.status === 401) {\r\n          navigate('/login');\r\n        } else {\r\n          setError('Failed to load student data');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchStudentData();\r\n  }, [studentId, navigate]);\r\n\r\n  // Speech Recognition Setup\r\n  const startSpeechRecognition = () => {\r\n    if ('webkitSpeechRecognition' in window) {\r\n      const recognition = new window.webkitSpeechRecognition();\r\n      recognitionRef.current = recognition;\r\n      recognition.continuous = true;\r\n      recognition.interimResults = true;\r\n\r\n      recognition.onresult = (event) => {\r\n        const current = event.resultIndex;\r\n        const transcript = event.results[current][0].transcript;\r\n        setTranscript(transcript);\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        setError('Speech recognition error: ' + event.error);\r\n      };\r\n\r\n      recognition.start();\r\n      setIsRecording(true);\r\n    } else {\r\n      setError('Speech recognition is not supported in your browser');\r\n    }\r\n  };\r\n\r\n  const stopSpeechRecognition = () => {\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  // OCR Functionality\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    setIsProcessing(true);\r\n    setError('');\r\n\r\n    try {\r\n      const result = await Tesseract.recognize(\r\n        file,\r\n        'eng',\r\n        { logger: m => console.log(m) }\r\n      );\r\n      setOcrResult(result.data.text);\r\n    } catch (err) {\r\n      setError('OCR processing failed: ' + err.message);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Simple string comparison for accuracy\r\n  const calculateAccuracy = (str1, str2) => {\r\n    if (!str1 || !str2) return 0;\r\n    \r\n    // Convert to lowercase and remove spaces\r\n    const s1 = str1.toLowerCase().replace(/\\s+/g, '');\r\n    const s2 = str2.toLowerCase().replace(/\\s+/g, '');\r\n    \r\n    // Count matching characters\r\n    let matches = 0;\r\n    const minLength = Math.min(s1.length, s2.length);\r\n    \r\n    for (let i = 0; i < minLength; i++) {\r\n      if (s1[i] === s2[i]) matches++;\r\n    }\r\n    \r\n    // Calculate percentage\r\n    return (matches / Math.max(s1.length, s2.length)) * 100;\r\n  };\r\n\r\n  // Evaluate Assessment\r\n  const handleEvaluate = () => {\r\n    // Get the student's response based on assessment type\r\n    const studentResponse = assessmentType === 'speech' ? transcript : ocrResult;\r\n    \r\n    // Basic validation\r\n    if (!expectedAnswer) {\r\n      setError('Please enter the expected answer');\r\n      return;\r\n    }\r\n    \r\n    if (!studentResponse) {\r\n      setError(`Please provide ${assessmentType === 'speech' ? 'speech' : 'OCR'} input`);\r\n      return;\r\n    }\r\n\r\n    // Calculate and set accuracy\r\n    const newAccuracy = calculateAccuracy(studentResponse, expectedAnswer);\r\n    setAccuracy(newAccuracy);\r\n    setError(''); // Clear any errors\r\n  };\r\n\r\n  // Save Assessment\r\n  const handleSave = async () => {\r\n    if (!expectedAnswer) {\r\n      setError('Please provide the expected answer');\r\n      return;\r\n    }\r\n\r\n    if (accuracy === 0) {\r\n      setError('Please evaluate the assessment before saving');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const assessmentData = {\r\n        type: assessmentType,\r\n        expectedAnswer,\r\n        accuracy,\r\n        date: new Date()\r\n      };\r\n\r\n      if (assessmentType === 'speech') {\r\n        assessmentData.transcript = transcript;\r\n      } else {\r\n        assessmentData.ocrResult = ocrResult;\r\n      }\r\n\r\n      await axios.post(\r\n        `/api/classes/${classId}/students/${studentId}/assessment`,\r\n        assessmentData,\r\n        { withCredentials: true }\r\n      );\r\n      \r\n      alert('Assessment saved successfully!');\r\n      navigate(`/class/${classId}`);\r\n    } catch (err) {\r\n      setError('Failed to save assessment: ' + (err.response?.data?.msg || err.message));\r\n    }\r\n  };\r\n\r\n  if (!student) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const chartData = {\r\n    labels: student.assessments.map(a => new Date(a.date).toLocaleDateString()),\r\n    datasets: [\r\n      {\r\n        label: 'Assessment Accuracy',\r\n        data: student.assessments.map(a => a.accuracy),\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.1\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <h1 className=\"text-3xl font-bold\">Student Assessment</h1>\r\n          <button\r\n            onClick={() => navigate(`/class/${classId}`)}\r\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\r\n          >\r\n            ← Back to Class\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Assessment Type Selection */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Assessment Type</h2>\r\n          <div className=\"flex gap-4\">\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"speech\"\r\n                checked={assessmentType === 'speech'}\r\n                onChange={(e) => setAssessmentType(e.target.value)}\r\n                className=\"mr-2\"\r\n              />\r\n              Speech to Text\r\n            </label>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"ocr\"\r\n                checked={assessmentType === 'ocr'}\r\n                onChange={(e) => setAssessmentType(e.target.value)}\r\n                className=\"mr-2\"\r\n              />\r\n              OCR (Image to Text)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Expected Answer Input */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Expected Answer</h2>\r\n          <textarea\r\n            value={expectedAnswer}\r\n            onChange={(e) => setExpectedAnswer(e.target.value)}\r\n            placeholder=\"Enter the expected answer...\"\r\n            className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 min-h-[100px]\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          {/* Speech to Text Section */}\r\n          <div className={`bg-white rounded-lg shadow-md p-6 ${assessmentType === 'ocr' ? 'opacity-50' : ''}`}>\r\n            <h2 className=\"text-xl font-semibold mb-4\">Speech to Text</h2>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex gap-4\">\r\n                <button\r\n                  onClick={isRecording ? stopSpeechRecognition : startSpeechRecognition}\r\n                  disabled={assessmentType === 'ocr'}\r\n                  className={`px-4 py-2 rounded-md ${\r\n                    isRecording\r\n                      ? 'bg-red-600 hover:bg-red-700'\r\n                      : 'bg-indigo-600 hover:bg-indigo-700'\r\n                  } text-white ${assessmentType === 'ocr' ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                >\r\n                  {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n                </button>\r\n              </div>\r\n              <div className=\"border rounded-md p-4 min-h-[200px]\">\r\n                <p className=\"text-gray-700\">{transcript || 'Speech transcript will appear here...'}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* OCR Section */}\r\n          <div className={`bg-white rounded-lg shadow-md p-6 ${assessmentType === 'speech' ? 'opacity-50' : ''}`}>\r\n            <h2 className=\"text-xl font-semibold mb-4\">OCR (Image to Text)</h2>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Upload Image\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageUpload}\r\n                  disabled={assessmentType === 'speech'}\r\n                  className={`block w-full text-sm text-gray-500\r\n                    file:mr-4 file:py-2 file:px-4\r\n                    file:rounded-md file:border-0\r\n                    file:text-sm file:font-semibold\r\n                    file:bg-indigo-50 file:text-indigo-700\r\n                    hover:file:bg-indigo-100 ${assessmentType === 'speech' ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                />\r\n              </div>\r\n              {isProcessing && (\r\n                <div className=\"text-center py-4\">\r\n                  <p className=\"text-gray-600\">Processing image...</p>\r\n                </div>\r\n              )}\r\n              <div className=\"border rounded-md p-4 min-h-[200px]\">\r\n                <p className=\"text-gray-700\">{ocrResult || 'OCR result will appear here...'}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Evaluate Button */}\r\n        <div className=\"mt-8 flex justify-center\">\r\n          <button\r\n            onClick={handleEvaluate}\r\n            className=\"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n          >\r\n            Evaluate Assessment\r\n          </button>\r\n        </div>\r\n\r\n        {/* Accuracy Display */}\r\n        {accuracy > 0 && (\r\n          <div className=\"mt-8 bg-white rounded-lg shadow-md p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Accuracy</h2>\r\n            <div className=\"flex items-center\">\r\n              <div className=\"w-full bg-gray-200 rounded-full h-4\">\r\n                <div\r\n                  className=\"bg-indigo-600 h-4 rounded-full\"\r\n                  style={{ width: `${accuracy}%` }}\r\n                ></div>\r\n              </div>\r\n              <span className=\"ml-4 text-lg font-semibold\">{accuracy.toFixed(1)}%</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Save Button */}\r\n        <div className=\"mt-8 flex justify-end\">\r\n          <button\r\n            onClick={handleSave}\r\n            className=\"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n          >\r\n            Save Assessment\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentAssessment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}